'''
Author: ZHAO Zinan
Created: 07. April 2019

5017. Sum of Root To Leaf Binary Numbers
''' 

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

def heightofleaf(node):
    if not node:
        return []
    if node.left == None and node.right == None:
        return [0]
    return [i+1 for i in heightofleaf(node.left)]+[i+1 for i in heightofleaf(node.right)]

class Solution:
    def sumRootToLeaf(self, root: TreeNode) -> int:
        if not root:
            return 0
        if root.val == 1:
            sumval = sum([2**i%(10**9+7) for i in heightofleaf(root)])%(10**9+7) # int overflow 
            print(sumval)
        else:
            sumval = 0
        return int((self.sumRootToLeaf(root.left)+self.sumRootToLeaf(root.right)+sumval)%(10**9+7))
        
    